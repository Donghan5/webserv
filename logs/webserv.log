[2025-02-24 14:01:43.209] DEBUG: Read line: events {
[2025-02-24 14:01:43.209] DEBUG: Read line:     worker_connections 1024;
[2025-02-24 14:01:43.209] DEBUG: Read line:     use poll;
[2025-02-24 14:01:43.209] DEBUG: Read line: }
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line: http {
[2025-02-24 14:01:43.209] DEBUG: Read line: 	include /etc/nginx/mime.types;
[2025-02-24 14:01:43.209] DEBUG: Read line: 	server {
[2025-02-24 14:01:43.209] DEBUG: Read line:         listen 8080;
[2025-02-24 14:01:43.209] DEBUG: Read line:         server_name localhost;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         root ./www;
[2025-02-24 14:01:43.209] DEBUG: Read line:         index index.html index.php;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location / {
[2025-02-24 14:01:43.209] DEBUG: Read line:             try_files $uri $uri/ =404;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location ~ \.py$ {
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Key: fastcgi_param
[2025-02-24 14:01:43.209] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:01:43.209] DEBUG: Key: fastcgi_pass
[2025-02-24 14:01:43.209] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Key: include
[2025-02-24 14:01:43.209] DEBUG: Value: fastcgi_params;
[2025-02-24 14:01:43.209] DEBUG: Key: location
[2025-02-24 14:01:43.209] DEBUG: Value: ~
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: $uri
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location ~ \.php$ {
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_pass unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:01:43.209] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Key: fastcgi_param
[2025-02-24 14:01:43.209] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location ~ \.pl$ {
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Key: fastcgi_param
[2025-02-24 14:01:43.209] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location ~ \.sh$ {
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:01:43.209] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Key: fastcgi_param
[2025-02-24 14:01:43.209] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line:         location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
[2025-02-24 14:01:43.209] DEBUG: Read line:             expires 6M;
[2025-02-24 14:01:43.209] DEBUG: Read line:             access_log off;
[2025-02-24 14:01:43.209] DEBUG: Read line:         }
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: 6M;
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line: 		location /set-cookie {
[2025-02-24 14:01:43.209] DEBUG: Read line:     		add_header Set-Cookie "user=42webserv; Path=/; HttpOnly";
[2025-02-24 14:01:43.209] DEBUG: Read line:     		return 200 "Cookie has been set!";
[2025-02-24 14:01:43.209] DEBUG: Read line: 		}
[2025-02-24 14:01:43.209] DEBUG: Key: path
[2025-02-24 14:01:43.209] DEBUG: Value: Set-Cookie
[2025-02-24 14:01:43.209] DEBUG: Read line: 
[2025-02-24 14:01:43.209] DEBUG: Read line: }
[2025-02-24 14:01:43.209] DEBUG: Key: index
[2025-02-24 14:01:43.209] DEBUG: Value: index.html
[2025-02-24 14:01:43.209] DEBUG: Key: listen
[2025-02-24 14:01:43.209] DEBUG: Value: 8080;
[2025-02-24 14:01:43.209] DEBUG: Key: location
[2025-02-24 14:01:43.209] DEBUG: Value: /
[2025-02-24 14:01:43.209] DEBUG: Key: root
[2025-02-24 14:01:43.209] DEBUG: Value: ./www;
[2025-02-24 14:01:43.209] DEBUG: Key: server_name
[2025-02-24 14:01:43.209] DEBUG: Value: localhost;
[2025-02-24 14:01:43.209] DEBUG: Read line: }
[2025-02-24 14:01:43.209] DEBUG: Key: include
[2025-02-24 14:01:43.209] DEBUG: Value: /etc/nginx/mime.types
[2025-02-24 14:01:43.209] INFO: Start Server
[2025-02-24 14:01:48.905] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:01:48.905] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:01:48.905] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:01:48.905] INFO: Resolved root: ./www
[2025-02-24 14:01:48.905] INFO: Directive to: ./www/index.html
[2025-02-24 14:01:48.905] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:01:48.905] INFO: 200 OK in get request
[2025-02-24 14:01:48.905] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 6314

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Webserv Modern Website</title>
    <link rel="stylesheet" href="style.css">
    <script src="script.js" defer></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>üöÄ Webserv</h1>
        <nav>
            <ul>
                <li><a href="index.html">üè† HOME</a></li>
                <li><a href="about.html">‚ÑπÔ∏è ABOUT</a></li>
                <li><a href="contact.html">üìû CONTACT</a></li>
            </ul>
        </nav>
    </header>

    <section class="hero">
        <h2>WELCOME TO WEBSERV ‚ú®</h2>
        <p>THIS WEBSITE SERVED AS WEBSERV</p>
    </section>

    <div class="container">
        <h1>üì§ Upload File (POST)</h1>
        <input type="file" id="fileInput">
        <button class="btn-primary" onclick="uploadFile()">Upload</button>
        <p id="upload-status"></p>
    </div>

    <div class="container">
        <h1>üóëÔ∏è Delete File (DELETE)</h1>
        <input type="text" id="deleteFileName" placeholder="Enter filename to delete">
        <button class="btn-danger" onclick="deleteFile()">Delete</button>
        <p id="delete-status"></p>
    </div>

    <div class="container">
        <h1>üìÑ View File (GET)</h1>
        <input type="text" id="getFileName" placeholder="Enter filename">
        <button class="btn-secondary" onclick="getFile()">View</button>
        <p id="get-status"></p>
        <img id="preview-image" style="max-width: 100%; display: none;" />
    </div>

    <div class="container">
        <h1>‚ö° CGI Test</h1>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.py')">Run Python CGI üêç</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.php')">Run PHP CGI üêò</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.pl')">Run Perl CGI üê™</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.sh')">Run Bash CGI üñ•Ô∏è</button>
        <p id="cgi-output">üìÑ CGI output will be displayed here.</p>
    </div>

	<div class="container">
		<h1>üç™ Cookie Test</h1>
		<button class="btn-primary" onclick="setCookie()">Set Cookie</button>
		<button class="btn-secondary" onclick="getCookie()">Get Cookie</button>
		<p id="cookie-status">üìÑ Cookie value will be displayed here.</p>
	</div>

    <footer>
        <p>&copy; 2025 WEBSERV PROJECT</p>
    </footer>

    <script>
        function uploadFile() {
            const fileInput = document.getElementById("fileInput");
            const file = fileInput.files[0];
            if (!file) {
                alert("Please select a file to upload.");
                return;
            }

            const formData = new FormData();
            formData.append("file", file);

            fetch("/upload/" + file.name, {
                method: "POST",
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById("upload-status").innerText = "‚úÖ Upload Successful!";
            })
            .catch(error => {
                document.getElementById("upload-status").innerText = "‚ùå Upload Failed!";
            });
        }

        function deleteFile() {
            const fileName = document.getElementById("deleteFileName").value;
            if (!fileName) {
                alert("Please enter a filename to delete.");
                return;
            }

            fetch("/upload/" + fileName, { method: "DELETE" })
            .then(response => response.text())
            .then(data => {
                document.getElementById("delete-status").innerText = "‚úÖ File Deleted!";
            })
            .catch(error => {
                document.getElementById("delete-status").innerText = "‚ùå Delete Failed!";
            });
        }

        function getFile() {
            const fileName = document.getElementById("getFileName").value;
            if (!fileName) {
                alert("Please enter a filename.");
                return;
            }

            fetch("/upload/" + fileName)
            .then(response => {
                if (!response.ok) {
                    throw new Error("File not found!");
                }
                return response.blob();
            })
            .then(blob => {
                const fileType = blob.type;
                const url = URL.createObjectURL(blob);

                if (fileType.startsWith("image/")) {
                    document.getElementById("preview-image").src = url;
                    document.getElementById("preview-image").style.display = "block";
                } else {
                    window.open(url, "_blank");
                }
                document.getElementById("get-status").innerText = "‚úÖ File retrieved!";
            })
            .catch(error => {
                document.getElementById("get-status").innerText = "‚ùå File not found!";
            });
        }

        function runCGI(cgiPath) {
            fetch(cgiPath)
            .then(response => response.text())
            .then(data => {
                document.getElementById("cgi-output").innerText = "‚úÖ CGI Output:\n" + data;
            })
            .catch(error => {
                document.getElementById("cgi-output").innerText = "‚ùå CGI Execution Failed!";
            });
        }

		function setCookie() {
			fetch("/set-cookie", { method: "GET", credentials: "include" })
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
			});
		}

		function getCookie() {
			fetch("/get-cookie", { method: "GET", credentials: "include"})
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
			});
		}

    </script>

</body>
</html>

[2025-02-24 14:01:48.913] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:01:48.913] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:01:48.913] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:01:48.913] INFO: Resolved root: ./www
[2025-02-24 14:01:48.913] INFO: Directive to: ./www/style.css
[2025-02-24 14:01:48.913] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:01:48.914] INFO: 200 OK in get request
[2025-02-24 14:01:48.914] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: text/css
Content-Length: 1844

body {
    font-family: 'Poppins', sans-serif;
    text-align: center;
    background-color: #1C1C1E;
    color: #E5E5E7;
    margin: 0;
    padding: 0;
}

header {
    background: #2C2C2E;
    color: white;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
}

header h1 {
    margin: 0;
    font-size: 26px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
}

nav ul li {
    margin: 0 20px;
}

nav ul li a {
    color: #E5E5E7;
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease-in-out;
}

nav ul li a:hover {
    color: #A0A0A0;
}

/* üé≠ Hero section (Main) */
.hero {
    background: linear-gradient(135deg, #333, #111);
    color: white;
    padding: 60px 20px;
    border-radius: 0 0 20px 20px;
}

.hero h2 {
    font-size: 32px;
    margin: 0;
    font-weight: 600;
}

.hero p {
    font-size: 18px;
    margin-top: 10px;
    color: #CCCCCC;
}

.container {
    background: #2C2C2E;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    max-width: 400px;
    margin: 20px auto;
}

.btn-primary {
    background: linear-gradient(135deg, #3A3A3C, #1C1C1E);
    border: none;
    padding: 12px 18px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    margin-top: 15px;
    border-radius: 10px;
    color: #E5E5E7;
    transition: all 0.3s ease-in-out;
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.2);
}

.btn-primary:hover {
    background: linear-gradient(135deg, #505050, #303030);
    transform: scale(1.05);
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.3);
}

footer {
    background: #2C2C2E;
    color: #A0A0A0;
    padding: 15px;
    margin-top: 20px;
    border-radius: 20px 20px 0 0;
}

[2025-02-24 14:01:48.915] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:01:48.915] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:01:48.915] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:01:48.915] INFO: Resolved root: ./www
[2025-02-24 14:01:48.915] INFO: Directive to: ./www/script.js
[2025-02-24 14:01:48.915] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:01:48.915] INFO: 200 OK in get request
[2025-02-24 14:01:48.915] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: application/javascript
Content-Length: 1491

// function setCookie() {
//     fetch("/set-cookie", { method: "GET", credentials: "same-origin" })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
//     });
// }



// // Function to get a cookie
// function getCookie() {
//     fetch("/get-cookie", {
//         method: "GET",
//         credentials: "include"
//     })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
//     });
// }


// Track visit count
window.onload = function() {
    let visits = getCookie("visits") || 0;
    visits++;
    setCookie("visits", visits, 7);
    document.getElementById("visit-count").innerText = `Visit count: ${visits}`;
};

function sayHello() {
    const button = document.querySelector(".btn-primary");
    button.innerText = "‚úÖ ÌÅ¥Î¶≠ ÏôÑÎ£å!";
    button.style.background = "#4CAF50";
    button.style.color = "white";

    setTimeout(() => {
        button.innerText = "ÌÅ¥Î¶≠Ìï¥Î≥¥ÏÑ∏Ïöî";
        button.style.background = "#ffcc00";
        button.style.color = "black";
    }, 2000);

    alert("Hello! Welcome to webserv!!");
}

[2025-02-24 14:01:48.961] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:01:48.961] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:01:48.961] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:01:48.961] INFO: Resolved root: ./www
[2025-02-24 14:01:48.961] INFO: Directive to: ./www/get-cookie
[2025-02-24 14:01:48.961] INFO: Stopping Server
[2025-02-24 14:02:26.314] DEBUG: Read line: events {
[2025-02-24 14:02:26.314] DEBUG: Read line:     worker_connections 1024;
[2025-02-24 14:02:26.314] DEBUG: Read line:     use poll;
[2025-02-24 14:02:26.314] DEBUG: Read line: }
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line: http {
[2025-02-24 14:02:26.314] DEBUG: Read line: 	include /etc/nginx/mime.types;
[2025-02-24 14:02:26.314] DEBUG: Read line: 	server {
[2025-02-24 14:02:26.314] DEBUG: Read line:         listen 8080;
[2025-02-24 14:02:26.314] DEBUG: Read line:         server_name localhost;
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         root ./www;
[2025-02-24 14:02:26.314] DEBUG: Read line:         index index.html index.php;
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         location / {
[2025-02-24 14:02:26.314] DEBUG: Read line:             try_files $uri $uri/ =404;
[2025-02-24 14:02:26.314] DEBUG: Read line:         }
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         location ~ \.py$ {
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:26.314] DEBUG: Read line:         }
[2025-02-24 14:02:26.314] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:26.314] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:26.314] DEBUG: Key: fastcgi_pass
[2025-02-24 14:02:26.314] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Key: include
[2025-02-24 14:02:26.314] DEBUG: Value: fastcgi_params;
[2025-02-24 14:02:26.314] DEBUG: Key: location
[2025-02-24 14:02:26.314] DEBUG: Value: ~
[2025-02-24 14:02:26.314] DEBUG: Key: path
[2025-02-24 14:02:26.314] DEBUG: Value: $uri
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         location ~ \.php$ {
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_pass unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:02:26.314] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:26.314] DEBUG: Read line:         }
[2025-02-24 14:02:26.314] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:26.314] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:26.314] DEBUG: Key: path
[2025-02-24 14:02:26.314] DEBUG: Value: unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         location ~ \.pl$ {
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:26.314] DEBUG: Read line:         }
[2025-02-24 14:02:26.314] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:26.314] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:26.314] DEBUG: Key: path
[2025-02-24 14:02:26.314] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.314] DEBUG: Read line:         location ~ \.sh$ {
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:26.314] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:26.314] DEBUG: Read line:         }
[2025-02-24 14:02:26.314] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:26.314] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:26.314] DEBUG: Key: path
[2025-02-24 14:02:26.314] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:26.314] DEBUG: Read line: 
[2025-02-24 14:02:26.315] DEBUG: Read line:         location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
[2025-02-24 14:02:26.315] DEBUG: Read line:             expires 6M;
[2025-02-24 14:02:26.315] DEBUG: Read line:             access_log off;
[2025-02-24 14:02:26.315] DEBUG: Read line:         }
[2025-02-24 14:02:26.315] DEBUG: Key: path
[2025-02-24 14:02:26.315] DEBUG: Value: 6M;
[2025-02-24 14:02:26.315] DEBUG: Read line: 
[2025-02-24 14:02:26.315] DEBUG: Read line: 		location /set-cookie {
[2025-02-24 14:02:26.315] DEBUG: Read line:     		add_header Set-Cookie "user=42webserv; Path=/; HttpOnly";
[2025-02-24 14:02:26.315] DEBUG: Read line:     		return 200 "Cookie has been set!";
[2025-02-24 14:02:26.315] DEBUG: Read line: 		}
[2025-02-24 14:02:26.315] DEBUG: Key: path
[2025-02-24 14:02:26.315] DEBUG: Value: Set-Cookie
[2025-02-24 14:02:26.315] DEBUG: Read line: 
[2025-02-24 14:02:26.315] DEBUG: Read line: }
[2025-02-24 14:02:26.315] DEBUG: Key: index
[2025-02-24 14:02:26.315] DEBUG: Value: index.html
[2025-02-24 14:02:26.315] DEBUG: Key: listen
[2025-02-24 14:02:26.315] DEBUG: Value: 8080;
[2025-02-24 14:02:26.315] DEBUG: Key: location
[2025-02-24 14:02:26.315] DEBUG: Value: /
[2025-02-24 14:02:26.315] DEBUG: Key: root
[2025-02-24 14:02:26.315] DEBUG: Value: ./www;
[2025-02-24 14:02:26.315] DEBUG: Key: server_name
[2025-02-24 14:02:26.315] DEBUG: Value: localhost;
[2025-02-24 14:02:26.315] DEBUG: Read line: }
[2025-02-24 14:02:26.315] DEBUG: Key: include
[2025-02-24 14:02:26.315] DEBUG: Value: /etc/nginx/mime.types
[2025-02-24 14:02:26.315] INFO: Start Server
[2025-02-24 14:02:31.802] DEBUG: Read line: events {
[2025-02-24 14:02:31.802] DEBUG: Read line:     worker_connections 1024;
[2025-02-24 14:02:31.802] DEBUG: Read line:     use poll;
[2025-02-24 14:02:31.802] DEBUG: Read line: }
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line: http {
[2025-02-24 14:02:31.802] DEBUG: Read line: 	include /etc/nginx/mime.types;
[2025-02-24 14:02:31.802] DEBUG: Read line: 	server {
[2025-02-24 14:02:31.802] DEBUG: Read line:         listen 8080;
[2025-02-24 14:02:31.802] DEBUG: Read line:         server_name localhost;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         root ./www;
[2025-02-24 14:02:31.802] DEBUG: Read line:         index index.html index.php;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location / {
[2025-02-24 14:02:31.802] DEBUG: Read line:             try_files $uri $uri/ =404;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location ~ \.py$ {
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:31.802] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:31.802] DEBUG: Key: fastcgi_pass
[2025-02-24 14:02:31.802] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Key: include
[2025-02-24 14:02:31.802] DEBUG: Value: fastcgi_params;
[2025-02-24 14:02:31.802] DEBUG: Key: location
[2025-02-24 14:02:31.802] DEBUG: Value: ~
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.802] DEBUG: Value: $uri
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location ~ \.php$ {
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_pass unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:02:31.802] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:31.802] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.802] DEBUG: Value: unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location ~ \.pl$ {
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:31.802] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.802] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location ~ \.sh$ {
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:02:31.802] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Key: fastcgi_param
[2025-02-24 14:02:31.802] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.802] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line:         location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
[2025-02-24 14:02:31.802] DEBUG: Read line:             expires 6M;
[2025-02-24 14:02:31.802] DEBUG: Read line:             access_log off;
[2025-02-24 14:02:31.802] DEBUG: Read line:         }
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.802] DEBUG: Value: 6M;
[2025-02-24 14:02:31.802] DEBUG: Read line: 
[2025-02-24 14:02:31.802] DEBUG: Read line: 		location /set-cookie {
[2025-02-24 14:02:31.802] DEBUG: Read line:     		add_header Set-Cookie "user=42webserv; Path=/; HttpOnly";
[2025-02-24 14:02:31.802] DEBUG: Read line:     		return 200 "Cookie has been set!";
[2025-02-24 14:02:31.802] DEBUG: Read line: 		}
[2025-02-24 14:02:31.802] DEBUG: Key: path
[2025-02-24 14:02:31.803] DEBUG: Value: Set-Cookie
[2025-02-24 14:02:31.803] DEBUG: Read line: 
[2025-02-24 14:02:31.803] DEBUG: Read line: }
[2025-02-24 14:02:31.803] DEBUG: Key: index
[2025-02-24 14:02:31.803] DEBUG: Value: index.html
[2025-02-24 14:02:31.803] DEBUG: Key: listen
[2025-02-24 14:02:31.803] DEBUG: Value: 8080;
[2025-02-24 14:02:31.803] DEBUG: Key: location
[2025-02-24 14:02:31.803] DEBUG: Value: /
[2025-02-24 14:02:31.803] DEBUG: Key: root
[2025-02-24 14:02:31.803] DEBUG: Value: ./www;
[2025-02-24 14:02:31.803] DEBUG: Key: server_name
[2025-02-24 14:02:31.803] DEBUG: Value: localhost;
[2025-02-24 14:02:31.803] DEBUG: Read line: }
[2025-02-24 14:02:31.803] DEBUG: Key: include
[2025-02-24 14:02:31.803] DEBUG: Value: /etc/nginx/mime.types
[2025-02-24 14:02:31.803] INFO: Start Server
[2025-02-24 14:02:39.604] DEBUG: Parsing Request Line: GET /delete-cookie HTTP/1.1
[2025-02-24 14:02:39.604] DEBUG: Parsing Request Line: GET /delete-cookie HTTP/1.1
[2025-02-24 14:02:39.604] DEBUG: Parsing Request Line: GET /delete-cookie HTTP/1.1
[2025-02-24 14:02:39.604] INFO: Resolved root: ./www
[2025-02-24 14:02:39.604] INFO: Directive to: ./www/delete-cookie
[2025-02-24 14:02:39.605] INFO: Stopping Server
[2025-02-24 14:06:23.542] DEBUG: Read line: events {
[2025-02-24 14:06:23.542] DEBUG: Read line:     worker_connections 1024;
[2025-02-24 14:06:23.542] DEBUG: Read line:     use poll;
[2025-02-24 14:06:23.542] DEBUG: Read line: }
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line: http {
[2025-02-24 14:06:23.542] DEBUG: Read line: 	include /etc/nginx/mime.types;
[2025-02-24 14:06:23.542] DEBUG: Read line: 	server {
[2025-02-24 14:06:23.542] DEBUG: Read line:         listen 8080;
[2025-02-24 14:06:23.542] DEBUG: Read line:         server_name localhost;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         root ./www;
[2025-02-24 14:06:23.542] DEBUG: Read line:         index index.html index.php;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location / {
[2025-02-24 14:06:23.542] DEBUG: Read line:             try_files $uri $uri/ =404;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location ~ \.py$ {
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Key: fastcgi_param
[2025-02-24 14:06:23.542] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:06:23.542] DEBUG: Key: fastcgi_pass
[2025-02-24 14:06:23.542] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Key: include
[2025-02-24 14:06:23.542] DEBUG: Value: fastcgi_params;
[2025-02-24 14:06:23.542] DEBUG: Key: location
[2025-02-24 14:06:23.542] DEBUG: Value: ~
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: $uri
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location ~ \.php$ {
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_pass unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:06:23.542] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Key: fastcgi_param
[2025-02-24 14:06:23.542] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location ~ \.pl$ {
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Key: fastcgi_param
[2025-02-24 14:06:23.542] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location ~ \.sh$ {
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:06:23.542] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Key: fastcgi_param
[2025-02-24 14:06:23.542] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line:         location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
[2025-02-24 14:06:23.542] DEBUG: Read line:             expires 6M;
[2025-02-24 14:06:23.542] DEBUG: Read line:             access_log off;
[2025-02-24 14:06:23.542] DEBUG: Read line:         }
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: 6M;
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line: 		location /set-cookie {
[2025-02-24 14:06:23.542] DEBUG: Read line:     		add_header Set-Cookie "user=42webserv; Path=/; HttpOnly";
[2025-02-24 14:06:23.542] DEBUG: Read line:     		return 200 "Cookie has been set!";
[2025-02-24 14:06:23.542] DEBUG: Read line: 		}
[2025-02-24 14:06:23.542] DEBUG: Key: path
[2025-02-24 14:06:23.542] DEBUG: Value: Set-Cookie
[2025-02-24 14:06:23.542] DEBUG: Read line: 
[2025-02-24 14:06:23.542] DEBUG: Read line: }
[2025-02-24 14:06:23.542] DEBUG: Key: index
[2025-02-24 14:06:23.542] DEBUG: Value: index.html
[2025-02-24 14:06:23.542] DEBUG: Key: listen
[2025-02-24 14:06:23.542] DEBUG: Value: 8080;
[2025-02-24 14:06:23.542] DEBUG: Key: location
[2025-02-24 14:06:23.542] DEBUG: Value: /
[2025-02-24 14:06:23.542] DEBUG: Key: root
[2025-02-24 14:06:23.542] DEBUG: Value: ./www;
[2025-02-24 14:06:23.542] DEBUG: Key: server_name
[2025-02-24 14:06:23.542] DEBUG: Value: localhost;
[2025-02-24 14:06:23.542] DEBUG: Read line: }
[2025-02-24 14:06:23.542] DEBUG: Key: include
[2025-02-24 14:06:23.542] DEBUG: Value: /etc/nginx/mime.types
[2025-02-24 14:06:23.542] INFO: Start Server
[2025-02-24 14:06:34.766] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:06:34.766] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:06:34.766] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:06:34.766] INFO: Resolved root: ./www
[2025-02-24 14:06:34.766] INFO: Directive to: ./www/index.html
[2025-02-24 14:06:34.766] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:06:34.766] INFO: 200 OK in get request
[2025-02-24 14:06:34.766] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 6314

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Webserv Modern Website</title>
    <link rel="stylesheet" href="style.css">
    <script src="script.js" defer></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>üöÄ Webserv</h1>
        <nav>
            <ul>
                <li><a href="index.html">üè† HOME</a></li>
                <li><a href="about.html">‚ÑπÔ∏è ABOUT</a></li>
                <li><a href="contact.html">üìû CONTACT</a></li>
            </ul>
        </nav>
    </header>

    <section class="hero">
        <h2>WELCOME TO WEBSERV ‚ú®</h2>
        <p>THIS WEBSITE SERVED AS WEBSERV</p>
    </section>

    <div class="container">
        <h1>üì§ Upload File (POST)</h1>
        <input type="file" id="fileInput">
        <button class="btn-primary" onclick="uploadFile()">Upload</button>
        <p id="upload-status"></p>
    </div>

    <div class="container">
        <h1>üóëÔ∏è Delete File (DELETE)</h1>
        <input type="text" id="deleteFileName" placeholder="Enter filename to delete">
        <button class="btn-danger" onclick="deleteFile()">Delete</button>
        <p id="delete-status"></p>
    </div>

    <div class="container">
        <h1>üìÑ View File (GET)</h1>
        <input type="text" id="getFileName" placeholder="Enter filename">
        <button class="btn-secondary" onclick="getFile()">View</button>
        <p id="get-status"></p>
        <img id="preview-image" style="max-width: 100%; display: none;" />
    </div>

    <div class="container">
        <h1>‚ö° CGI Test</h1>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.py')">Run Python CGI üêç</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.php')">Run PHP CGI üêò</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.pl')">Run Perl CGI üê™</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.sh')">Run Bash CGI üñ•Ô∏è</button>
        <p id="cgi-output">üìÑ CGI output will be displayed here.</p>
    </div>

	<div class="container">
		<h1>üç™ Cookie Test</h1>
		<button class="btn-primary" onclick="setCookie()">Set Cookie</button>
		<button class="btn-secondary" onclick="getCookie()">Get Cookie</button>
		<p id="cookie-status">üìÑ Cookie value will be displayed here.</p>
	</div>

    <footer>
        <p>&copy; 2025 WEBSERV PROJECT</p>
    </footer>

    <script>
        function uploadFile() {
            const fileInput = document.getElementById("fileInput");
            const file = fileInput.files[0];
            if (!file) {
                alert("Please select a file to upload.");
                return;
            }

            const formData = new FormData();
            formData.append("file", file);

            fetch("/upload/" + file.name, {
                method: "POST",
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById("upload-status").innerText = "‚úÖ Upload Successful!";
            })
            .catch(error => {
                document.getElementById("upload-status").innerText = "‚ùå Upload Failed!";
            });
        }

        function deleteFile() {
            const fileName = document.getElementById("deleteFileName").value;
            if (!fileName) {
                alert("Please enter a filename to delete.");
                return;
            }

            fetch("/upload/" + fileName, { method: "DELETE" })
            .then(response => response.text())
            .then(data => {
                document.getElementById("delete-status").innerText = "‚úÖ File Deleted!";
            })
            .catch(error => {
                document.getElementById("delete-status").innerText = "‚ùå Delete Failed!";
            });
        }

        function getFile() {
            const fileName = document.getElementById("getFileName").value;
            if (!fileName) {
                alert("Please enter a filename.");
                return;
            }

            fetch("/upload/" + fileName)
            .then(response => {
                if (!response.ok) {
                    throw new Error("File not found!");
                }
                return response.blob();
            })
            .then(blob => {
                const fileType = blob.type;
                const url = URL.createObjectURL(blob);

                if (fileType.startsWith("image/")) {
                    document.getElementById("preview-image").src = url;
                    document.getElementById("preview-image").style.display = "block";
                } else {
                    window.open(url, "_blank");
                }
                document.getElementById("get-status").innerText = "‚úÖ File retrieved!";
            })
            .catch(error => {
                document.getElementById("get-status").innerText = "‚ùå File not found!";
            });
        }

        function runCGI(cgiPath) {
            fetch(cgiPath)
            .then(response => response.text())
            .then(data => {
                document.getElementById("cgi-output").innerText = "‚úÖ CGI Output:\n" + data;
            })
            .catch(error => {
                document.getElementById("cgi-output").innerText = "‚ùå CGI Execution Failed!";
            });
        }

		function setCookie() {
			fetch("/set-cookie", { method: "GET", credentials: "include" })
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
			});
		}

		function getCookie() {
			fetch("/get-cookie", { method: "GET", credentials: "include"})
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
			});
		}

    </script>

</body>
</html>

[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:06:34.773] INFO: Resolved root: ./www
[2025-02-24 14:06:34.773] INFO: Directive to: ./www/style.css
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:06:34.773] INFO: 200 OK in get request
[2025-02-24 14:06:34.773] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: text/css
Content-Length: 1844

body {
    font-family: 'Poppins', sans-serif;
    text-align: center;
    background-color: #1C1C1E;
    color: #E5E5E7;
    margin: 0;
    padding: 0;
}

header {
    background: #2C2C2E;
    color: white;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
}

header h1 {
    margin: 0;
    font-size: 26px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
}

nav ul li {
    margin: 0 20px;
}

nav ul li a {
    color: #E5E5E7;
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease-in-out;
}

nav ul li a:hover {
    color: #A0A0A0;
}

/* üé≠ Hero section (Main) */
.hero {
    background: linear-gradient(135deg, #333, #111);
    color: white;
    padding: 60px 20px;
    border-radius: 0 0 20px 20px;
}

.hero h2 {
    font-size: 32px;
    margin: 0;
    font-weight: 600;
}

.hero p {
    font-size: 18px;
    margin-top: 10px;
    color: #CCCCCC;
}

.container {
    background: #2C2C2E;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    max-width: 400px;
    margin: 20px auto;
}

.btn-primary {
    background: linear-gradient(135deg, #3A3A3C, #1C1C1E);
    border: none;
    padding: 12px 18px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    margin-top: 15px;
    border-radius: 10px;
    color: #E5E5E7;
    transition: all 0.3s ease-in-out;
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.2);
}

.btn-primary:hover {
    background: linear-gradient(135deg, #505050, #303030);
    transform: scale(1.05);
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.3);
}

footer {
    background: #2C2C2E;
    color: #A0A0A0;
    padding: 15px;
    margin-top: 20px;
    border-radius: 20px 20px 0 0;
}

[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:06:34.773] INFO: Resolved root: ./www
[2025-02-24 14:06:34.773] INFO: Directive to: ./www/script.js
[2025-02-24 14:06:34.773] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:06:34.773] INFO: 200 OK in get request
[2025-02-24 14:06:34.773] DEBUG: Response: HTTP/1.1 200 OK
Content-Type: application/javascript
Content-Length: 1491

// function setCookie() {
//     fetch("/set-cookie", { method: "GET", credentials: "same-origin" })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
//     });
// }



// // Function to get a cookie
// function getCookie() {
//     fetch("/get-cookie", {
//         method: "GET",
//         credentials: "include"
//     })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
//     });
// }


// Track visit count
window.onload = function() {
    let visits = getCookie("visits") || 0;
    visits++;
    setCookie("visits", visits, 7);
    document.getElementById("visit-count").innerText = `Visit count: ${visits}`;
};

function sayHello() {
    const button = document.querySelector(".btn-primary");
    button.innerText = "‚úÖ ÌÅ¥Î¶≠ ÏôÑÎ£å!";
    button.style.background = "#4CAF50";
    button.style.color = "white";

    setTimeout(() => {
        button.innerText = "ÌÅ¥Î¶≠Ìï¥Î≥¥ÏÑ∏Ïöî";
        button.style.background = "#ffcc00";
        button.style.color = "black";
    }, 2000);

    alert("Hello! Welcome to webserv!!");
}

[2025-02-24 14:06:34.798] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:06:34.798] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:06:34.798] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:06:34.798] INFO: Resolved root: ./www
[2025-02-24 14:06:34.798] INFO: Directive to: ./www/get-cookie
[2025-02-24 14:06:34.798] INFO: Stopping Server
[2025-02-24 14:17:02.414] DEBUG: Read line: events {
[2025-02-24 14:17:02.414] DEBUG: Read line:     worker_connections 1024;
[2025-02-24 14:17:02.414] DEBUG: Read line:     use poll;
[2025-02-24 14:17:02.414] DEBUG: Read line: }
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line: http {
[2025-02-24 14:17:02.414] DEBUG: Read line: 	include /etc/nginx/mime.types;
[2025-02-24 14:17:02.414] DEBUG: Read line: 	server {
[2025-02-24 14:17:02.414] DEBUG: Read line:         listen 8080;
[2025-02-24 14:17:02.414] DEBUG: Read line:         server_name localhost;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         root ./www;
[2025-02-24 14:17:02.414] DEBUG: Read line:         index index.html index.php;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location / {
[2025-02-24 14:17:02.414] DEBUG: Read line:             try_files $uri $uri/ =404;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location ~ \.py$ {
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Key: fastcgi_param
[2025-02-24 14:17:02.414] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:17:02.414] DEBUG: Key: fastcgi_pass
[2025-02-24 14:17:02.414] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Key: include
[2025-02-24 14:17:02.414] DEBUG: Value: fastcgi_params;
[2025-02-24 14:17:02.414] DEBUG: Key: location
[2025-02-24 14:17:02.414] DEBUG: Value: ~
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: $uri
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location ~ \.php$ {
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_pass unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:17:02.414] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Key: fastcgi_param
[2025-02-24 14:17:02.414] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: unix:/run/php/php7.4-fpm.sock;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location ~ \.pl$ {
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Key: fastcgi_param
[2025-02-24 14:17:02.414] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location ~ \.sh$ {
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_pass unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Read line:             include fastcgi_params;
[2025-02-24 14:17:02.414] DEBUG: Read line:             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Key: fastcgi_param
[2025-02-24 14:17:02.414] DEBUG: Value: SCRIPT_FILENAME
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: unix:/run/fcgiwrap.socket;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line:         location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
[2025-02-24 14:17:02.414] DEBUG: Read line:             expires 6M;
[2025-02-24 14:17:02.414] DEBUG: Read line:             access_log off;
[2025-02-24 14:17:02.414] DEBUG: Read line:         }
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: 6M;
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line: 		location /set-cookie {
[2025-02-24 14:17:02.414] DEBUG: Read line:     		add_header Set-Cookie "user=42webserv; Path=/; HttpOnly";
[2025-02-24 14:17:02.414] DEBUG: Read line:     		return 200 "Cookie has been set!";
[2025-02-24 14:17:02.414] DEBUG: Read line: 		}
[2025-02-24 14:17:02.414] DEBUG: Key: path
[2025-02-24 14:17:02.414] DEBUG: Value: Set-Cookie
[2025-02-24 14:17:02.414] DEBUG: Read line: 
[2025-02-24 14:17:02.414] DEBUG: Read line: }
[2025-02-24 14:17:02.414] DEBUG: Key: index
[2025-02-24 14:17:02.414] DEBUG: Value: index.html
[2025-02-24 14:17:02.414] DEBUG: Key: listen
[2025-02-24 14:17:02.414] DEBUG: Value: 8080;
[2025-02-24 14:17:02.414] DEBUG: Key: location
[2025-02-24 14:17:02.414] DEBUG: Value: /
[2025-02-24 14:17:02.414] DEBUG: Key: root
[2025-02-24 14:17:02.414] DEBUG: Value: ./www;
[2025-02-24 14:17:02.414] DEBUG: Key: server_name
[2025-02-24 14:17:02.414] DEBUG: Value: localhost;
[2025-02-24 14:17:02.414] DEBUG: Read line: }
[2025-02-24 14:17:02.414] DEBUG: Key: include
[2025-02-24 14:17:02.414] DEBUG: Value: /etc/nginx/mime.types
[2025-02-24 14:17:02.414] INFO: Start Server
[2025-02-24 14:17:08.196] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:17:08.197] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:17:08.197] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:17:08.197] INFO: Resolved root: ./www
[2025-02-24 14:17:08.197] INFO: Directive to: ./www/index.html
[2025-02-24 14:17:08.197] DEBUG: Parsing Request Line: GET / HTTP/1.1
[2025-02-24 14:17:08.197] DEBUG: New session key created: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.197] INFO: 200 OK in get request
[2025-02-24 14:17:08.197] DEBUG: Response: HTTP/1.1 200 OK
Set-Cookie: session_id=3X8qfYTZT9V1RsTP; Path=/; HttpOnly
Content-Type: text/html
Content-Length: 6314

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Webserv Modern Website</title>
    <link rel="stylesheet" href="style.css">
    <script src="script.js" defer></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>üöÄ Webserv</h1>
        <nav>
            <ul>
                <li><a href="index.html">üè† HOME</a></li>
                <li><a href="about.html">‚ÑπÔ∏è ABOUT</a></li>
                <li><a href="contact.html">üìû CONTACT</a></li>
            </ul>
        </nav>
    </header>

    <section class="hero">
        <h2>WELCOME TO WEBSERV ‚ú®</h2>
        <p>THIS WEBSITE SERVED AS WEBSERV</p>
    </section>

    <div class="container">
        <h1>üì§ Upload File (POST)</h1>
        <input type="file" id="fileInput">
        <button class="btn-primary" onclick="uploadFile()">Upload</button>
        <p id="upload-status"></p>
    </div>

    <div class="container">
        <h1>üóëÔ∏è Delete File (DELETE)</h1>
        <input type="text" id="deleteFileName" placeholder="Enter filename to delete">
        <button class="btn-danger" onclick="deleteFile()">Delete</button>
        <p id="delete-status"></p>
    </div>

    <div class="container">
        <h1>üìÑ View File (GET)</h1>
        <input type="text" id="getFileName" placeholder="Enter filename">
        <button class="btn-secondary" onclick="getFile()">View</button>
        <p id="get-status"></p>
        <img id="preview-image" style="max-width: 100%; display: none;" />
    </div>

    <div class="container">
        <h1>‚ö° CGI Test</h1>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.py')">Run Python CGI üêç</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.php')">Run PHP CGI üêò</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.pl')">Run Perl CGI üê™</button>
        <button class="btn-secondary" onclick="runCGI('/cgi-bin/test.sh')">Run Bash CGI üñ•Ô∏è</button>
        <p id="cgi-output">üìÑ CGI output will be displayed here.</p>
    </div>

	<div class="container">
		<h1>üç™ Cookie Test</h1>
		<button class="btn-primary" onclick="setCookie()">Set Cookie</button>
		<button class="btn-secondary" onclick="getCookie()">Get Cookie</button>
		<p id="cookie-status">üìÑ Cookie value will be displayed here.</p>
	</div>

    <footer>
        <p>&copy; 2025 WEBSERV PROJECT</p>
    </footer>

    <script>
        function uploadFile() {
            const fileInput = document.getElementById("fileInput");
            const file = fileInput.files[0];
            if (!file) {
                alert("Please select a file to upload.");
                return;
            }

            const formData = new FormData();
            formData.append("file", file);

            fetch("/upload/" + file.name, {
                method: "POST",
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById("upload-status").innerText = "‚úÖ Upload Successful!";
            })
            .catch(error => {
                document.getElementById("upload-status").innerText = "‚ùå Upload Failed!";
            });
        }

        function deleteFile() {
            const fileName = document.getElementById("deleteFileName").value;
            if (!fileName) {
                alert("Please enter a filename to delete.");
                return;
            }

            fetch("/upload/" + fileName, { method: "DELETE" })
            .then(response => response.text())
            .then(data => {
                document.getElementById("delete-status").innerText = "‚úÖ File Deleted!";
            })
            .catch(error => {
                document.getElementById("delete-status").innerText = "‚ùå Delete Failed!";
            });
        }

        function getFile() {
            const fileName = document.getElementById("getFileName").value;
            if (!fileName) {
                alert("Please enter a filename.");
                return;
            }

            fetch("/upload/" + fileName)
            .then(response => {
                if (!response.ok) {
                    throw new Error("File not found!");
                }
                return response.blob();
            })
            .then(blob => {
                const fileType = blob.type;
                const url = URL.createObjectURL(blob);

                if (fileType.startsWith("image/")) {
                    document.getElementById("preview-image").src = url;
                    document.getElementById("preview-image").style.display = "block";
                } else {
                    window.open(url, "_blank");
                }
                document.getElementById("get-status").innerText = "‚úÖ File retrieved!";
            })
            .catch(error => {
                document.getElementById("get-status").innerText = "‚ùå File not found!";
            });
        }

        function runCGI(cgiPath) {
            fetch(cgiPath)
            .then(response => response.text())
            .then(data => {
                document.getElementById("cgi-output").innerText = "‚úÖ CGI Output:\n" + data;
            })
            .catch(error => {
                document.getElementById("cgi-output").innerText = "‚ùå CGI Execution Failed!";
            });
        }

		function setCookie() {
			fetch("/set-cookie", { method: "GET", credentials: "include" })
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
			});
		}

		function getCookie() {
			fetch("/get-cookie", { method: "GET", credentials: "include"})
			.then(response => response.text())
			.then(data => {
				document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
			})
			.catch(error => {
				document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
			});
		}

    </script>

</body>
</html>

[2025-02-24 14:17:08.203] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:17:08.203] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.203] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.203] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:17:08.203] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.203] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.203] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:17:08.203] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.203] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.203] INFO: Resolved root: ./www
[2025-02-24 14:17:08.203] INFO: Directive to: ./www/style.css
[2025-02-24 14:17:08.203] DEBUG: Parsing Request Line: GET /style.css HTTP/1.1
[2025-02-24 14:17:08.203] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.203] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] DEBUG: Session_id found: session_id=3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] INFO: 200 OK in get request
[2025-02-24 14:17:08.204] DEBUG: Response: HTTP/1.1 200 OK
Set-Cookie: session_id=session_id=3X8qfYTZT9V1RsTP; Path=/; HttpOnly
Content-Type: text/css
Content-Length: 1844

body {
    font-family: 'Poppins', sans-serif;
    text-align: center;
    background-color: #1C1C1E;
    color: #E5E5E7;
    margin: 0;
    padding: 0;
}

header {
    background: #2C2C2E;
    color: white;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
}

header h1 {
    margin: 0;
    font-size: 26px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
}

nav ul li {
    margin: 0 20px;
}

nav ul li a {
    color: #E5E5E7;
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease-in-out;
}

nav ul li a:hover {
    color: #A0A0A0;
}

/* üé≠ Hero section (Main) */
.hero {
    background: linear-gradient(135deg, #333, #111);
    color: white;
    padding: 60px 20px;
    border-radius: 0 0 20px 20px;
}

.hero h2 {
    font-size: 32px;
    margin: 0;
    font-weight: 600;
}

.hero p {
    font-size: 18px;
    margin-top: 10px;
    color: #CCCCCC;
}

.container {
    background: #2C2C2E;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    max-width: 400px;
    margin: 20px auto;
}

.btn-primary {
    background: linear-gradient(135deg, #3A3A3C, #1C1C1E);
    border: none;
    padding: 12px 18px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    margin-top: 15px;
    border-radius: 10px;
    color: #E5E5E7;
    transition: all 0.3s ease-in-out;
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.2);
}

.btn-primary:hover {
    background: linear-gradient(135deg, #505050, #303030);
    transform: scale(1.05);
    box-shadow: inset 0 -3px 0 rgba(255, 255, 255, 0.3);
}

footer {
    background: #2C2C2E;
    color: #A0A0A0;
    padding: 15px;
    margin-top: 20px;
    border-radius: 20px 20px 0 0;
}

[2025-02-24 14:17:08.204] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:17:08.204] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.204] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:17:08.204] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.204] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:17:08.204] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.204] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] INFO: Resolved root: ./www
[2025-02-24 14:17:08.204] INFO: Directive to: ./www/script.js
[2025-02-24 14:17:08.204] DEBUG: Parsing Request Line: GET /script.js HTTP/1.1
[2025-02-24 14:17:08.204] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.204] DEBUG:  - session_id: 3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] DEBUG: Session_id found: session_id=3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.204] INFO: 200 OK in get request
[2025-02-24 14:17:08.204] DEBUG: Response: HTTP/1.1 200 OK
Set-Cookie: session_id=session_id=3X8qfYTZT9V1RsTP; Path=/; HttpOnly
Content-Type: application/javascript
Content-Length: 1491

// function setCookie() {
//     fetch("/set-cookie", { method: "GET", credentials: "same-origin" })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "‚úÖ Cookie Set!";
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå Failed to set cookie!";
//     });
// }



// // Function to get a cookie
// function getCookie() {
//     fetch("/get-cookie", {
//         method: "GET",
//         credentials: "include"
//     })
//     .then(response => response.text())
//     .then(data => {
//         document.getElementById("cookie-status").innerText = "üç™ Cookie: " + data;
//     })
//     .catch(error => {
//         document.getElementById("cookie-status").innerText = "‚ùå No cookie found!";
//     });
// }


// Track visit count
window.onload = function() {
    let visits = getCookie("visits") || 0;
    visits++;
    setCookie("visits", visits, 7);
    document.getElementById("visit-count").innerText = `Visit count: ${visits}`;
};

function sayHello() {
    const button = document.querySelector(".btn-primary");
    button.innerText = "‚úÖ ÌÅ¥Î¶≠ ÏôÑÎ£å!";
    button.style.background = "#4CAF50";
    button.style.color = "white";

    setTimeout(() => {
        button.innerText = "ÌÅ¥Î¶≠Ìï¥Î≥¥ÏÑ∏Ïöî";
        button.style.background = "#ffcc00";
        button.style.color = "black";
    }, 2000);

    alert("Hello! Welcome to webserv!!");
}

[2025-02-24 14:17:08.231] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:17:08.232] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.232] DEBUG:  - session_id: session_id=3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.232] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:17:08.232] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.232] DEBUG:  - session_id: session_id=3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.232] DEBUG: Parsing Request Line: GET /get-cookie HTTP/1.1
[2025-02-24 14:17:08.232] DEBUG: Parsed cookies: 
[2025-02-24 14:17:08.232] DEBUG:  - session_id: session_id=3X8qfYTZT9V1RsTP
[2025-02-24 14:17:08.232] INFO: Resolved root: ./www
[2025-02-24 14:17:08.232] INFO: Directive to: ./www/get-cookie
[2025-02-24 14:17:08.232] INFO: Stopping Server
